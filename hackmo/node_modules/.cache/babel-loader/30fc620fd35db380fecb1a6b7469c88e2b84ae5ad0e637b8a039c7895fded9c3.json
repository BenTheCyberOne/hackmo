{"ast":null,"code":"import logo from'./logo.svg';import'./App.css';import UserDashboard from'./components/UserDashboard';import Register from'./components/Register';// Assuming you have a Register component\nimport React from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/register\",component:Register}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",component:UserDashboard})]})});};export default App;","map":{"version":3,"names":["logo","UserDashboard","Register","React","BrowserRouter","Router","Route","Switch","jsx","_jsx","jsxs","_jsxs","App","children","path","component"],"sources":["/home/ubuntu/hackmo/hackmo/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport UserDashboard from './components/UserDashboard';\nimport Register from './components/Register'; // Assuming you have a Register component\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/dashboard\" component={UserDashboard} />\n        {/* Other routes can go here */}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,YAAY,CAC7B,MAAO,WAAW,CAClB,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAAE;AAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1E,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,mBACEH,IAAA,CAACJ,MAAM,EAAAQ,QAAA,cACLF,KAAA,CAACJ,MAAM,EAAAM,QAAA,eACLJ,IAAA,CAACH,KAAK,EAACQ,IAAI,CAAC,WAAW,CAACC,SAAS,CAAEb,QAAS,CAAE,CAAC,cAC/CO,IAAA,CAACH,KAAK,EAACQ,IAAI,CAAC,YAAY,CAACC,SAAS,CAAEd,aAAc,CAAE,CAAC,EAE/C,CAAC,CACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}