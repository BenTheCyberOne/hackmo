{"ast":null,"code":"import React,{useEffect,useState}from'react';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import UserDashboard from'./components/UserDashboard';import Register from'./components/Registration';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[isAuthenticated,setIsAuthenticated]=useState(null);// Tracks session status\nconst[loading,setLoading]=useState(true);// Tracks whether the app is checking session\nuseEffect(()=>{const checkSession=async()=>{try{const response=await fetch('/api/user',{method:'GET',credentials:'include'// Send cookies with the request\n});if(response.ok){setIsAuthenticated(true);// User has a valid session\n}else{setIsAuthenticated(false);// No valid session\n}}catch(error){console.error('Error checking session:',error);setIsAuthenticated(false);// Assume no session on error\n}finally{setLoading(false);// Stop loading indicator\n}};checkSession();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Show a loading indicator while checking session\n}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isAuthenticated?/*#__PURE__*/_jsx(UserDashboard,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/register\"})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:isAuthenticated?'/dashboard':'/register'})})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Navigate","UserDashboard","Register","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","setIsAuthenticated","loading","setLoading","checkSession","response","fetch","method","credentials","ok","error","console","children","path","element","to"],"sources":["/home/ubuntu/hackmo/hackmo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport UserDashboard from './components/UserDashboard';\nimport Register from './components/Registration';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null); // Tracks session status\n  const [loading, setLoading] = useState(true); // Tracks whether the app is checking session\n\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const response = await fetch('/api/user', {\n          method: 'GET',\n          credentials: 'include', // Send cookies with the request\n        });\n\n        if (response.ok) {\n          setIsAuthenticated(true); // User has a valid session\n        } else {\n          setIsAuthenticated(false); // No valid session\n        }\n      } catch (error) {\n        console.error('Error checking session:', error);\n        setIsAuthenticated(false); // Assume no session on error\n      } finally {\n        setLoading(false); // Stop loading indicator\n      }\n    };\n\n    checkSession();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>; // Show a loading indicator while checking session\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/dashboard\"\n          element={isAuthenticated ? <UserDashboard /> : <Navigate to=\"/register\" />}\n        />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"*\" element={<Navigate to={isAuthenticated ? '/dashboard' : '/register'} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,QAAQ,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC9D,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE9CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,WAAW,CAAE,CACxCC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAW;AAC1B,CAAC,CAAC,CAEF,GAAIH,QAAQ,CAACI,EAAE,CAAE,CACfR,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC5B,CAAC,IAAM,CACLA,kBAAkB,CAAC,KAAK,CAAC,CAAE;AAC7B,CACF,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CT,kBAAkB,CAAC,KAAK,CAAC,CAAE;AAC7B,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CACF,CAAC,CAEDC,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,CAAE,CACX,mBAAON,IAAA,QAAAgB,QAAA,CAAK,YAAU,CAAK,CAAC,CAAE;AAChC,CAEA,mBACEhB,IAAA,CAACP,MAAM,EAAAuB,QAAA,cACLd,KAAA,CAACP,MAAM,EAAAqB,QAAA,eACLhB,IAAA,CAACN,KAAK,EACJuB,IAAI,CAAC,YAAY,CACjBC,OAAO,CAAEd,eAAe,cAAGJ,IAAA,CAACH,aAAa,GAAE,CAAC,cAAGG,IAAA,CAACJ,QAAQ,EAACuB,EAAE,CAAC,WAAW,CAAE,CAAE,CAC5E,CAAC,cACFnB,IAAA,CAACN,KAAK,EAACuB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAElB,IAAA,CAACF,QAAQ,GAAE,CAAE,CAAE,CAAC,cACjDE,IAAA,CAACN,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAElB,IAAA,CAACJ,QAAQ,EAACuB,EAAE,CAAEf,eAAe,CAAG,YAAY,CAAG,WAAY,CAAE,CAAE,CAAE,CAAC,EACrF,CAAC,CACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}